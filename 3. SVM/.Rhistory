if(media < ESPECIFICACION){
mejor$densidades <- densidades
mejor$svm <- x.svm2
mejor$media <- media
mejor$desv <- desv
mejor$train <- viga.train
mejor$test <- x.test
mejor$new <- new
mejor$pulgadas <- x
encontrado <- TRUE
esp_actual <- media
}
densidades <- densidades + 1
}
ord <- sort(c(mejor$test,mejor$pulgadas), index.return=T)
ent.x <- ord$x
ent.ind <- ord$ix
ent.y <- c(new, viga.train)[ent.ind]
plot(ent.x, ent.y, pch=".", type="l")
points(pulgadas, viga2)
densidades <- 7
densidades_totales <- 314
ESPECIFICACION <- 5 # Especificación de los ingenieros
esp_actual <- 1000
encontrado <- FALSE
media <- 100
while(esp_actual > ESPECIFICACION && densidades <= densidades_totales && !encontrado){
# Seleccionamos una muestra como entrenamiento
ind.train <- sample(1:densidades_totales, densidades)
ind.train <- sort(ind.train)
# Entrenamiento viga
viga.train <- viga2[ind.train]
# Test de viga
viga.test <- viga2[-ind.train]
# Variable que será el punto del diámetro de la viga en la que
# se calcula la densidad
x <- pulgadas[ind.train]
y <- viga.train
x.svm2 <- svm(x,y, type="eps-regression", kernel="radial",
epsilon=0.02, gamma=40, cost=100, scale=F)
x.test <- pulgadas[-ind.train]
# Nueva predicción
new <- predict(x.svm2, x.test)
# Media y desviación típica del error
media <- mean(abs(viga.test-new))
desv  <- sd(abs(viga.test-new))
# Objeto vacío que contendrá toda la información
mejor <- NULL
if(media < ESPECIFICACION){
mejor$densidades <- densidades
mejor$svm <- x.svm2
mejor$media <- media
mejor$desv <- desv
mejor$train <- viga.train
mejor$test <- x.test
mejor$new <- new
mejor$pulgadas <- x
encontrado <- TRUE
esp_actual <- media
}
densidades <- densidades + 1
}
ord <- sort(c(mejor$test,mejor$pulgadas), index.return=T)
ent.x <- ord$x
ent.ind <- ord$ix
ent.y <- c(new, viga.train)[ent.ind]
plot(ent.x, ent.y, pch=".", type="l")
points(pulgadas, viga2)
mejor$desv
mejor$media
mejor$svm
densidades <- 8
densidades_totales <- 314
ESPECIFICACION <- 5 # Especificación de los ingenieros
esp_actual <- 1000
encontrado <- FALSE
media <- 100
while(esp_actual > ESPECIFICACION && densidades <= densidades_totales && !encontrado){
# Seleccionamos una muestra como entrenamiento
ind.train <- sample(1:densidades_totales, densidades)
ind.train <- sort(ind.train)
# Entrenamiento viga
viga.train <- viga2[ind.train]
# Test de viga
viga.test <- viga2[-ind.train]
# Variable que será el punto del diámetro de la viga en la que
# se calcula la densidad
x <- pulgadas[ind.train]
y <- viga.train
x.svm2 <- svm(x,y, type="eps-regression", kernel="radial",
epsilon=0.02, gamma=40, cost=100, scale=F)
x.test <- pulgadas[-ind.train]
# Nueva predicción
new <- predict(x.svm2, x.test)
# Media y desviación típica del error
media <- mean(abs(viga.test-new))
desv  <- sd(abs(viga.test-new))
# Objeto vacío que contendrá toda la información
mejor <- NULL
if(media < ESPECIFICACION){
mejor$densidades <- densidades
mejor$svm <- x.svm2
mejor$media <- media
mejor$desv <- desv
mejor$train <- viga.train
mejor$test <- x.test
mejor$new <- new
mejor$pulgadas <- x
encontrado <- TRUE
esp_actual <- media
}
densidades <- densidades + 1
}
ord <- sort(c(mejor$test,mejor$pulgadas), index.return=T)
ent.x <- ord$x
ent.ind <- ord$ix
ent.y <- c(new, viga.train)[ent.ind]
plot(ent.x, ent.y, pch=".", type="l")
points(pulgadas, viga2)
densidades <- 8
densidades_totales <- 314
ESPECIFICACION <- 5 # Especificación de los ingenieros
esp_actual <- 1000
encontrado <- FALSE
media <- 100
while(esp_actual > ESPECIFICACION && densidades <= densidades_totales && !encontrado){
# Seleccionamos una muestra como entrenamiento
ind.train <- sample(1:densidades_totales, densidades)
ind.train <- sort(ind.train)
# Entrenamiento viga
viga.train <- viga2[ind.train]
# Test de viga
viga.test <- viga2[-ind.train]
# Variable que será el punto del diámetro de la viga en la que
# se calcula la densidad
x <- pulgadas[ind.train]
y <- viga.train
x.svm2 <- svm(x,y, type="eps-regression", kernel="radial",
epsilon=0.02, gamma=40, cost=100, scale=F)
x.test <- pulgadas[-ind.train]
# Nueva predicción
new <- predict(x.svm2, x.test)
# Media y desviación típica del error
media <- mean(abs(viga.test-new))
desv  <- sd(abs(viga.test-new))
# Objeto vacío que contendrá toda la información
mejor <- NULL
if(media < ESPECIFICACION){
mejor$densidades <- densidades
mejor$svm <- x.svm2
mejor$media <- media
mejor$desv <- desv
mejor$train <- viga.train
mejor$test <- x.test
mejor$new <- new
mejor$pulgadas <- x
encontrado <- TRUE
esp_actual <- media
}
densidades <- densidades + 1
}
ord <- sort(c(mejor$test,mejor$pulgadas), index.return=T)
ent.x <- ord$x
ent.ind <- ord$ix
ent.y <- c(new, viga.train)[ent.ind]
plot(ent.x, ent.y, pch=".", type="l")
points(pulgadas, viga2)
densidades <- 8
densidades_totales <- 314
ESPECIFICACION <- 5 # Especificación de los ingenieros
esp_actual <- 1000
encontrado <- FALSE
media <- 100
while(esp_actual > ESPECIFICACION && densidades <= densidades_totales && !encontrado){
# Seleccionamos una muestra como entrenamiento
ind.train <- sample(1:densidades_totales, densidades)
ind.train <- sort(ind.train)
# Entrenamiento viga
viga.train <- viga2[ind.train]
# Test de viga
viga.test <- viga2[-ind.train]
# Variable que será el punto del diámetro de la viga en la que
# se calcula la densidad
x <- pulgadas[ind.train]
y <- viga.train
x.svm2 <- svm(x,y, type="eps-regression", kernel="radial",
epsilon=0.02, gamma=40, cost=100, scale=F)
x.test <- pulgadas[-ind.train]
# Nueva predicción
new <- predict(x.svm2, x.test)
# Media y desviación típica del error
media <- mean(abs(viga.test-new))
desv  <- sd(abs(viga.test-new))
# Objeto vacío que contendrá toda la información
mejor <- NULL
if(media < ESPECIFICACION){
mejor$densidades <- densidades
mejor$svm <- x.svm2
mejor$media <- media
mejor$desv <- desv
mejor$train <- viga.train
mejor$test <- x.test
mejor$new <- new
mejor$pulgadas <- x
encontrado <- TRUE
esp_actual <- media
}
densidades <- densidades + 1
}
ord <- sort(c(mejor$test,mejor$pulgadas), index.return=T)
ent.x <- ord$x
ent.ind <- ord$ix
ent.y <- c(new, viga.train)[ent.ind]
plot(ent.x, ent.y, pch=".", type="l")
points(pulgadas, viga2)
mejor$media
mejor$desv
densidades <- 9
densidades_totales <- 314
ESPECIFICACION <- 5 # Especificación de los ingenieros
esp_actual <- 1000
encontrado <- FALSE
media <- 100
while(esp_actual > ESPECIFICACION && densidades <= densidades_totales && !encontrado){
# Seleccionamos una muestra como entrenamiento
ind.train <- sample(1:densidades_totales, densidades)
ind.train <- sort(ind.train)
# Entrenamiento viga
viga.train <- viga2[ind.train]
# Test de viga
viga.test <- viga2[-ind.train]
# Variable que será el punto del diámetro de la viga en la que
# se calcula la densidad
x <- pulgadas[ind.train]
y <- viga.train
x.svm2 <- svm(x,y, type="eps-regression", kernel="radial",
epsilon=0.02, gamma=40, cost=100, scale=F)
x.test <- pulgadas[-ind.train]
# Nueva predicción
new <- predict(x.svm2, x.test)
# Media y desviación típica del error
media <- mean(abs(viga.test-new))
desv  <- sd(abs(viga.test-new))
# Objeto vacío que contendrá toda la información
mejor <- NULL
if(media < ESPECIFICACION){
mejor$densidades <- densidades
mejor$svm <- x.svm2
mejor$media <- media
mejor$desv <- desv
mejor$train <- viga.train
mejor$test <- x.test
mejor$new <- new
mejor$pulgadas <- x
encontrado <- TRUE
esp_actual <- media
}
densidades <- densidades + 1
}
ord <- sort(c(mejor$test,mejor$pulgadas), index.return=T)
ent.x <- ord$x
ent.ind <- ord$ix
ent.y <- c(new, viga.train)[ent.ind]
plot(ent.x, ent.y, pch=".", type="l")
points(pulgadas, viga2)
densidades <- 9
densidades_totales <- 314
ESPECIFICACION <- 5 # Especificación de los ingenieros
esp_actual <- 1000
encontrado <- FALSE
media <- 100
while(esp_actual > ESPECIFICACION && densidades <= densidades_totales && !encontrado){
# Seleccionamos una muestra como entrenamiento
ind.train <- sample(1:densidades_totales, densidades)
ind.train <- sort(ind.train)
# Entrenamiento viga
viga.train <- viga2[ind.train]
# Test de viga
viga.test <- viga2[-ind.train]
# Variable que será el punto del diámetro de la viga en la que
# se calcula la densidad
x <- pulgadas[ind.train]
y <- viga.train
x.svm2 <- svm(x,y, type="eps-regression", kernel="radial",
epsilon=0.02, gamma=40, cost=100, scale=F)
x.test <- pulgadas[-ind.train]
# Nueva predicción
new <- predict(x.svm2, x.test)
# Media y desviación típica del error
media <- mean(abs(viga.test-new))
desv  <- sd(abs(viga.test-new))
# Objeto vacío que contendrá toda la información
mejor <- NULL
if(media < ESPECIFICACION){
mejor$densidades <- densidades
mejor$svm <- x.svm2
mejor$media <- media
mejor$desv <- desv
mejor$train <- viga.train
mejor$test <- x.test
mejor$new <- new
mejor$pulgadas <- x
encontrado <- TRUE
esp_actual <- media
}
densidades <- densidades + 1
}
ord <- sort(c(mejor$test,mejor$pulgadas), index.return=T)
ent.x <- ord$x
ent.ind <- ord$ix
ent.y <- c(new, viga.train)[ent.ind]
plot(ent.x, ent.y, pch=".", type="l")
points(pulgadas, viga2)
m <- mejor
m$media
m$desv
densidades <- 8
densidades_totales <- 314
ESPECIFICACION <- 5 # Especificación de los ingenieros
esp_actual <- 1000
encontrado <- FALSE
media <- 100
while(esp_actual > ESPECIFICACION && densidades <= densidades_totales && !encontrado){
# Seleccionamos una muestra como entrenamiento
ind.train <- sample(1:densidades_totales, densidades)
ind.train <- sort(ind.train)
# Entrenamiento viga
viga.train <- viga2[ind.train]
# Test de viga
viga.test <- viga2[-ind.train]
# Variable que será el punto del diámetro de la viga en la que
# se calcula la densidad
x <- pulgadas[ind.train]
y <- viga.train
x.svm2 <- svm(x,y, type="eps-regression", kernel="radial",
epsilon=0.02, gamma=40, cost=100, scale=F)
x.test <- pulgadas[-ind.train]
# Nueva predicción
new <- predict(x.svm2, x.test)
# Media y desviación típica del error
media <- mean(abs(viga.test-new))
desv  <- sd(abs(viga.test-new))
# Objeto vacío que contendrá toda la información
mejor <- NULL
if(media < ESPECIFICACION){
mejor$densidades <- densidades
mejor$svm <- x.svm2
mejor$media <- media
mejor$desv <- desv
mejor$train <- viga.train
mejor$test <- x.test
mejor$new <- new
mejor$pulgadas <- x
encontrado <- TRUE
esp_actual <- media
}
densidades <- densidades + 1
}
ord <- sort(c(mejor$test,mejor$pulgadas), index.return=T)
ent.x <- ord$x
ent.ind <- ord$ix
ent.y <- c(new, viga.train)[ent.ind]
plot(ent.x, ent.y, pch=".", type="l")
points(pulgadas, viga2)
densidades <- 8
densidades_totales <- 314
ESPECIFICACION <- 5 # Especificación de los ingenieros
esp_actual <- 1000
encontrado <- FALSE
media <- 100
while(esp_actual > ESPECIFICACION && densidades <= densidades_totales && !encontrado){
# Seleccionamos una muestra como entrenamiento
ind.train <- sample(1:densidades_totales, densidades)
ind.train <- sort(ind.train)
# Entrenamiento viga
viga.train <- viga2[ind.train]
# Test de viga
viga.test <- viga2[-ind.train]
# Variable que será el punto del diámetro de la viga en la que
# se calcula la densidad
x <- pulgadas[ind.train]
y <- viga.train
x.svm2 <- svm(x,y, type="eps-regression", kernel="radial",
epsilon=0.02, gamma=40, cost=100, scale=F)
x.test <- pulgadas[-ind.train]
# Nueva predicción
new <- predict(x.svm2, x.test)
# Media y desviación típica del error
media <- mean(abs(viga.test-new))
desv  <- sd(abs(viga.test-new))
# Objeto vacío que contendrá toda la información
mejor <- NULL
if(media < ESPECIFICACION){
mejor$densidades <- densidades
mejor$svm <- x.svm2
mejor$media <- media
mejor$desv <- desv
mejor$train <- viga.train
mejor$test <- x.test
mejor$new <- new
mejor$pulgadas <- x
encontrado <- TRUE
esp_actual <- media
}
densidades <- densidades + 1
}
ord <- sort(c(mejor$test,mejor$pulgadas), index.return=T)
ent.x <- ord$x
ent.ind <- ord$ix
ent.y <- c(new, viga.train)[ent.ind]
plot(ent.x, ent.y, pch=".", type="l")
points(pulgadas, viga2)
mejor$media
mejor$desv
densidades <- 2
densidades_totales <- 314
ESPECIFICACION <- 5 # Especificación de los ingenieros
esp_actual <- 1000
encontrado <- FALSE
media <- 100
while(esp_actual > ESPECIFICACION && densidades <= densidades_totales && !encontrado){
# Seleccionamos una muestra como entrenamiento
ind.train <- sample(1:densidades_totales, densidades)
ind.train <- sort(ind.train)
# Entrenamiento viga
viga.train <- viga2[ind.train]
# Test de viga
viga.test <- viga2[-ind.train]
# Variable que será el punto del diámetro de la viga en la que
# se calcula la densidad
x <- pulgadas[ind.train]
y <- viga.train
x.svm2 <- svm(x,y, type="eps-regression", kernel="radial",
epsilon=0.02, gamma=40, cost=100, scale=F)
x.test <- pulgadas[-ind.train]
# Nueva predicción
new <- predict(x.svm2, x.test)
# Media y desviación típica del error
media <- mean(abs(viga.test-new))
desv  <- sd(abs(viga.test-new))
# Objeto vacío que contendrá toda la información
mejor <- NULL
if(media < ESPECIFICACION){
mejor$densidades <- densidades
mejor$svm <- x.svm2
mejor$media <- media
mejor$desv <- desv
mejor$train <- viga.train
mejor$test <- x.test
mejor$new <- new
mejor$pulgadas <- x
encontrado <- TRUE
esp_actual <- media
}
densidades <- densidades + 1
}
ord <- sort(c(mejor$test,mejor$pulgadas), index.return=T)
ent.x <- ord$x
ent.ind <- ord$ix
ent.y <- c(new, viga.train)[ent.ind]
plot(ent.x, ent.y, pch=".", type="l")
points(pulgadas, viga2)
densidades <- 2
densidades_totales <- 314
ESPECIFICACION <- 5 # Especificación de los ingenieros
esp_actual <- 1000
encontrado <- FALSE
media <- 100
while(esp_actual > ESPECIFICACION && densidades <= densidades_totales && !encontrado){
# Seleccionamos una muestra como entrenamiento
ind.train <- sample(1:densidades_totales, densidades)
ind.train <- sort(ind.train)
# Entrenamiento viga
viga.train <- viga2[ind.train]
# Test de viga
viga.test <- viga2[-ind.train]
# Variable que será el punto del diámetro de la viga en la que
# se calcula la densidad
x <- pulgadas[ind.train]
y <- viga.train
x.svm2 <- svm(x,y, type="eps-regression", kernel="radial",
epsilon=0.02, gamma=40, cost=100, scale=F)
x.test <- pulgadas[-ind.train]
# Nueva predicción
new <- predict(x.svm2, x.test)
# Media y desviación típica del error
media <- mean(abs(viga.test-new))
desv  <- sd(abs(viga.test-new))
# Objeto vacío que contendrá toda la información
mejor <- NULL
if(media < ESPECIFICACION){
mejor$densidades <- densidades
mejor$svm <- x.svm2
mejor$media <- media
mejor$desv <- desv
mejor$train <- viga.train
mejor$test <- x.test
mejor$new <- new
mejor$pulgadas <- x
encontrado <- TRUE
esp_actual <- media
}
densidades <- densidades + 1
}
ord <- sort(c(mejor$test,mejor$pulgadas), index.return=T)
ent.x <- ord$x
ent.ind <- ord$ix
ent.y <- c(new, viga.train)[ent.ind]
plot(ent.x, ent.y, pch=".", type="l")
points(pulgadas, viga2)
mejor$media
mejor$desv
