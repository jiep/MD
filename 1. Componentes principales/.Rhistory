install.packages("bcpa")
install.packages("bpca")
install.packages("rgl")
install.packages("rgl")
install.packages("devtools")
library("tools", lib.loc="/usr/lib/R/library")
install.packages("rgl")
install.packages("bpca")
install.packages("bpca")
library("bpca")
data <- data(gabriel1971)
data
View(data)
datos <- data(gabriel1971)
datos
data(gabriel1971)
gabriel1971
view(gabriel1971)
View(gabriel1971)
USArrests[1:10,]
prcomp(USArrests)
plot(prcomp(USArrests))
summary(prcomp(USArrests))
plot(prcomp(USArrests), scale=T)
plot(prcomp(USArrests, scale=T))
summary(prcomp(USArrests, scale=T))
prcomp(USArrests, scale=T)
plot(prcomp(USArrests, scale=T)$x[,1:2])
plot(prcomp(USArrests, scale=T)$x[,1:2], type='n')
text(prcomp(USArrests, scale=T)$x[,1:2], rownames(USArrests))
biplot(prcomp(USArrests, scale=T))
library(ca)
install.packages("ca")
library(ca)
public <- file.choose()
public
periodicos <- read.table(file=public, header=TRUE)
periodicos
plot(ca(periodicos))
ls()
rm(list=ls())
data(gabriel1971)
gabriel1971
View(gabriel1971)
show(gabriel1971)
summary(gabriel1971)
prcomp(gabriel1971)
summary(prcomp(gabriel1971))
prcomp(gabriel1971, scale=TRUE)
summary(prcomp(gabriel1971, scale=TRUE))
plot(prcomp(gabriel1971, scale=TRUE))
plot(prcomp(gabriel1971, scale=TRUE)$x[,1:2])
plot(prcomp(gabriel1971, scale=TRUE)$x[,1:2], rownames(gabriel1971))
plot(prcomp(gabriel1971, scale=TRUE)$x[,1:2], type='n')
plot(prcomp(gabriel1971, scale=TRUE)$x[,1:2], rownames(gabriel1971))
prcomp(gabriel1971, scale=TRUE)$x[,1:2]
plot(prcomp(gabriel1971, scale=TRUE)$x[,1:2], rownames(gabriel1971))
plot(prcomp(gabriel1971, scale=TRUE)$x[,1:2], type='n')
plot(prcomp(gabriel1971, scale=TRUE)$x[,1:2], rownames(gabriel1971))
show(gabriel1971)
text(prcomp(gabriel1971, scale=TRUE)$x[,1:2], rownames(gabriel1971))
biplot(prcomp(gabriel1971, scale=TRUE))
bp <- bpca(gabriel1971)
dev.new(w=6, h=6)
plot(bp,
var.factor=2)
# Exploring the object 'bp' created by the function 'bpca'
class(bp)
names(bp)
str(bp)
summary(bp)
bp$call
bp$eigenval
bp$eigenvec
bp$numb
bp$import
bp$coord
bp$coord$obj
bp$coord$var
bp$var.rb
bp$var.rd
rm(ls())
rm(list=ls())
library(ca)
data("HairEyeColor")
show(HairEyeColor)
attach(HairEyeColor)
table.global <- HairEyeColor[ , , 1] + HairEyeColor[, , 2]
table.female <- HairEyeColor[ , , 2]
table.male   <- HairEyeColor[ , , 1]
table.female
cap = function(data){
plot(ca(data))
}
cap(table.global)
cap(table.male)
cap(table.female)
cap(table.global)
cap(table.male)
cap(table.female)
cap(table.female)
cap = function(data, title){
plot(ca(data), main=title)
}
# Llamamos a la función definida anteriormente con cada una de las variables
cap(table.global, "Hombres y mujeres")
cap(table.male, "Hombres")
cap(table.female, "Mujeres")
cap(table.global, "Hombres y mujeres")
ca(table.male)
# Cargamos los datos con los colores de ojos y de pelo
data("HairEyeColor")
# Vemos parte de los datos
show(HairEyeColor)
# Agrupamos hombres y mujeres
# Guardamos los datos en variables por sexos
table.global <- HairEyeColor[ , , 1] + HairEyeColor[, , 2]
table.female <- HairEyeColor[ , , 2]
table.male   <- HairEyeColor[ , , 1]
# Defimimos una función para representar el análisis de correspondencias
cap = function(data, title){
plot(ca(data), main=title)
}
# Llamamos a la función definida anteriormente con cada una de las variables
cap(table.global, "Hombres y mujeres")
cap(table.male, "Hombres")
cap(table.female, "Mujeres")
library(ca)
# Cargamos los datos con los colores de ojos y de pelo
data("HairEyeColor")
# Vemos parte de los datos
show(HairEyeColor)
# Agrupamos hombres y mujeres
# Guardamos los datos en variables por sexos
table.global <- HairEyeColor[ , , 1] + HairEyeColor[, , 2]
table.female <- HairEyeColor[ , , 2]
table.male   <- HairEyeColor[ , , 1]
# Defimimos una función para representar el análisis de correspondencias
cap = function(data, title){
plot(ca(data), main=title)
}
# Llamamos a la función definida anteriormente con cada una de las variables
cap(table.global, "Hombres y mujeres")
cap(table.male, "Hombres")
cap(table.female, "Mujeres")
library(ca)
data("HairEyeColor")
show(HairEyeColor)
?ca
